{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to Light Saber\n\n\nI Have no idea what Mark Down Documents are, but I need to learn\n\n\nCommands\n\n\n\n\nmkdocs new [dir-name]\n - Create a new project.\n\n\nmkdocs serve\n - Start the live-reloading docs server.\n\n\nmkdocs build\n - Build the documentation site.\n\n\nmkdocs help\n - Print this help message.\n\n\n\n\nProject layout\n\n\nmkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n\n\n\nThis is interesting\n\n\nNever thought about it but it is interesting\n\n\n\nKD8BXP Made This", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-light-saber", 
            "text": "I Have no idea what Mark Down Documents are, but I need to learn", 
            "title": "Welcome to Light Saber"
        }, 
        {
            "location": "/#commands", 
            "text": "mkdocs new [dir-name]  - Create a new project.  mkdocs serve  - Start the live-reloading docs server.  mkdocs build  - Build the documentation site.  mkdocs help  - Print this help message.", 
            "title": "Commands"
        }, 
        {
            "location": "/#project-layout", 
            "text": "mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.", 
            "title": "Project layout"
        }, 
        {
            "location": "/#this-is-interesting", 
            "text": "Never thought about it but it is interesting", 
            "title": "This is interesting"
        }, 
        {
            "location": "/#kd8bxp-made-this", 
            "text": "", 
            "title": "KD8BXP Made This"
        }, 
        {
            "location": "/selfbalancingrobot/", 
            "text": "Self Balancing Robot and the MPU 6050 Accelerometer/gyroscope\n\n\nFor now I'm just going to put up some links to the project I was trying to duplicate.\n\n\nDuplicating failed, but I know why - The guy didn't make it very clear how things are/were hooked up, but he did explain how a self balancing robot worked pretty good, so links are needed.\n\n\nHis code is/was written for the old IDE which of course caused some problems, they were pretty easy to fix. But in the long run it wasn't worth fixing since it didn't work with the hardware I got.  From what I have read there are dozens of variations on the MPU 6050 Accelerometer/gyroscope, and getting the raw data off them is easy, getting usable data each one deals with that differently.\n\n\nSo while he was using a MPU6050 - it wasn't the same as the one I got my hands on, and works a lot different.\n\n\nHe code was documented so poorly thou I couldn't make heads or tails out of what he was doing.\n\n\nSo - as it stands right now, my self balancing robot project is on hold.\n\n\nhttp://www.transistor.io/balancing-robot.html\n\n\n(It looks like he went thur 2 or 3 different versions of this robot, which maybe where some of the confusion comes from as well)\n\n\nSame guy - these are the 3D files used to print it out\u2026.and his idea of using a dowel rod worked pretty well.  I didn't make my own \"shield\" opting for the motor/sensor shield I already had, the UNO board 3D print turned out really nice, and could be used just as mount for a UNO board.\n\n\nhttp://www.thingiverse.com/thing:25531/#instructions\n\n\nHere is his code:\n\n\nhttps://github.com/jdorweiler/BalancingRobot\n\n\nThe Good Information he points to - really was good information it lead me to the point of how many different models of the MPU6050 there are.\n\n\nThe code in the GOOD information didn't work either thou, and was written for a different gyroscope\n\n\nhttp://forum.arduino.cc/index.php/topic,8871.0.html\n\n\nKerry Wong - has a lot of information about the science behind a self balancing thing, which is probably good to know. (There is no code that I saw on the site, but a lot of math, and theory)\n\n\nhttp://www.kerrywong.com/2012/03/08/a-self-balancing-robot-i/\n\n\nmrfid72 (Youtube name) - came up with a different self balancing robot, which is a lot closer to the one I built, so I figured I'd give his code a try, and I got spinning servos, I think he is using yet another MPU6050 that looks like mine, but works differently.\n\n\nhttps://www.youtube.com/watch?v=cC6nE2-NZao\n\n\n(Or it could be that his code gave some errors in the math as it was compiling, that I think I fixed, but I may have fixed it the wrong direction)\n\n\nFinally I came across this guys code: He is using a MPU6050 and servo motor, it looks like he also has some potentiometers hooked up. It looks to like he is only using one motor (?)\n\n\nI just found the code, I didn't find any pictures of his robot, video, or wiring diagrams.\n\n\nBut his code was giving out results from the gryoscope in the serial monitor.  Also, when I did hook one motor up to his output pin, and I tilted the robot from side to side, the wheel would speed up or slow down.  So I think his is the closest yet in terms of working with the MPU6050 I have.\n\n\nhttps://github.com/ericouyang/arduino_examples/blob/master/Balancing_Robot/balancing_robot.ino\n\n\nThe next step I think is to print out, or go line by line at the two peice of codes that almost work, and see if I can't jam them together and get the results needed to make this thing work.\n\n\nThe MPU6050 -\n\n\nThere is actually quite a bit of information out there about this, but this tutorial was one I found to be a bit better then others.  He does kind of hit on there being a lot of variations, but doesn't go into that in a whole lot of detail.\n\n\nThe MPU6050 is an I2C device, that needs some special codes to make it work and do what it should do, and getting the raw (more or less unusable) data out of it is easy. Getting usable data out of it not so much due to the different variations and firmwares. And even different breakout boards label pins differently.\n\n\nhttp://diyhacking.com/arduino-mpu-6050-imu-sensor-tutorial/\n\n\nThe MPU-6050 can be found on eBay for about $2 dollars - it is a 6DOF 3 Axis Gyroscope and Accelerometer - and from what I have read it is very accurate, but not so easy to use.\n\n\nmrfid72 (Youtube name) - I was able to get his code to work, at least to the point that I can say my Robot is balancing itself.\n\n\nhttps://www.youtube.com/watch?v=cC6nE2-NZao\n\n\nHis robot is the closest robot I have found to the one I built, but quite a bit of the math had to be changed in the original code. And I'm not sure if the changes I made are 100% right or not, they have to be getting close.", 
            "title": "Self Balancing Robot"
        }, 
        {
            "location": "/readme/", 
            "text": "Chatter Bot\n\n\nInstallation\n\n\nSimple fun chatter bot. \n1) Head from a Wowwee Tri-bot\n2) Catalex Uart MP3 player \n3) Arduino UNO or the like\n4) amplified speaker for the MP3 player\n\n\nFrom the Tri-Bot Head, purple wire is connected to 3.3v\nusing a ground wire I tested the other wires to figure out which does what.\nI am only using the center mouth led, and the 2 eye leds in this project.\nThere are also 2 ear leds, a white led (headlamp), and 2 more mouth leds.\nThere is a motor that will pop the headlamp and ears out.\nThis motor will also bring them all back into the head. \n\n\nYou need to find some jokes or some random stuff for your chat bot to just\nmindless say.  For mine I found some Star Wars jokes. Used a Text to Speech program, I made\na WAV file, and converted that file to a MP3. \nThe MP3 player will play the 1st \"song\" it finds and stops. The mouth leds are not\nany way synchronized to the sound, it just flashes the mouth.\n\n\nThings To Do\n\n\nadd other mouth LEDs.\nmake it play more than one MP3 file or repeat the MP3 over and over again.\n\n\nUsage\n\n\nTODO: Write usage instructions\n\n\nContributing\n\n\n\n\nFork it!\n\n\nCreate your feature branch: \ngit checkout -b my-new-feature\n\n\nCommit your changes: \ngit commit -am 'Add some feature'\n\n\nPush to the branch: \ngit push origin my-new-feature\n\n\nSubmit a pull request\n\n\n\n\nCredits\n\n\nLeRoy Miller (2015) and Catalex (unknown data)\nmost of the software is for the mp3 and based off the Catalex sketches.\n\n\nLicense\n\n\nThis program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see \nhttp://www.gnu.org/licenses", 
            "title": "Readme"
        }, 
        {
            "location": "/readme/#chatter-bot", 
            "text": "", 
            "title": "Chatter Bot"
        }, 
        {
            "location": "/readme/#installation", 
            "text": "Simple fun chatter bot. \n1) Head from a Wowwee Tri-bot\n2) Catalex Uart MP3 player \n3) Arduino UNO or the like\n4) amplified speaker for the MP3 player  From the Tri-Bot Head, purple wire is connected to 3.3v\nusing a ground wire I tested the other wires to figure out which does what.\nI am only using the center mouth led, and the 2 eye leds in this project.\nThere are also 2 ear leds, a white led (headlamp), and 2 more mouth leds.\nThere is a motor that will pop the headlamp and ears out.\nThis motor will also bring them all back into the head.   You need to find some jokes or some random stuff for your chat bot to just\nmindless say.  For mine I found some Star Wars jokes. Used a Text to Speech program, I made\na WAV file, and converted that file to a MP3. \nThe MP3 player will play the 1st \"song\" it finds and stops. The mouth leds are not\nany way synchronized to the sound, it just flashes the mouth.", 
            "title": "Installation"
        }, 
        {
            "location": "/readme/#things-to-do", 
            "text": "add other mouth LEDs.\nmake it play more than one MP3 file or repeat the MP3 over and over again.", 
            "title": "Things To Do"
        }, 
        {
            "location": "/readme/#usage", 
            "text": "TODO: Write usage instructions", 
            "title": "Usage"
        }, 
        {
            "location": "/readme/#contributing", 
            "text": "Fork it!  Create your feature branch:  git checkout -b my-new-feature  Commit your changes:  git commit -am 'Add some feature'  Push to the branch:  git push origin my-new-feature  Submit a pull request", 
            "title": "Contributing"
        }, 
        {
            "location": "/readme/#credits", 
            "text": "LeRoy Miller (2015) and Catalex (unknown data)\nmost of the software is for the mp3 and based off the Catalex sketches.", 
            "title": "Credits"
        }, 
        {
            "location": "/readme/#license", 
            "text": "This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.  This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see  http://www.gnu.org/licenses", 
            "title": "License"
        }, 
        {
            "location": "/about/", 
            "text": "301 Moved Permanently\n\n\n*301 Moved Permanently", 
            "title": "About"
        }, 
        {
            "location": "/about/#301-moved-permanently", 
            "text": "*301 Moved Permanently", 
            "title": "301 Moved Permanently"
        }
    ]
}